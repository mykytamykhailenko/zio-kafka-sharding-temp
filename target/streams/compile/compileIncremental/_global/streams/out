[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 57 products, 8 sources, 13 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/zio/kafka/sharding/Entity.scala, ${BASE}/src/main/scala/zio/kafka/sharding/model/EntityDescription.scala, ${BASE}/src/main/scala/CounterApp.scala, ${BASE}/src/main/scala/zio/kafka/sharding/model/ShardGroup.scala, ${BASE}/src/main/scala/zio/kafka/sharding/model/PartitionRegisterPool.scala, ${BASE}/src/main/scala/zio/kafka/sharding/package.scala, ${BASE}/src/main/scala/zio/kafka/sharding/PartitionRegisterer.scala, ${BASE}/src/main/scala/zio/kafka/sharding/Sharding.scala, ${BASE}/src/main/scala/zio/kafka/sharding/model/Shard.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/zio/kafka/sharding/model/PartitionRegisterPool.scala), removed = Set(), changed = Set(${BASE}/src/main/scala/zio/kafka/sharding/Entity.scala, ${BASE}/src/main/scala/zio/kafka/sharding/Sharding.scala, ${BASE}/src/main/scala/zio/kafka/sharding/PartitionRegisterer.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(${BASE}/src/main/scala/zio/kafka/sharding/model/PartitionRegisterPool.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/zio/kafka/sharding/Entity.scala, ${BASE}/src/main/scala/zio/kafka/sharding/Sharding.scala, ${BASE}/src/main/scala/zio/kafka/sharding/PartitionRegisterer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(zio.kafka.sharding.Entity, zio.kafka.sharding.Sharding.Reply, zio.kafka.sharding.PartitionRegisterer, zio.kafka.sharding.PartitionRegisterer.ShardEvent, zio.kafka.sharding.Sharding.ShardingDescription, zio.kafka.sharding.Sharding, zio.kafka.sharding.Sharding.Shard)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(zio.kafka.sharding.Entity, zio.kafka.sharding.Sharding.Reply, zio.kafka.sharding.PartitionRegisterer, zio.kafka.sharding.PartitionRegisterer.ShardEvent, zio.kafka.sharding.Sharding.ShardingDescription, zio.kafka.sharding.Sharding, zio.kafka.sharding.Sharding.Shard)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/zio/kafka/sharding/model/PartitionRegisterPool.scala, ${BASE}/src/main/scala/zio/kafka/sharding/Entity.scala, ${BASE}/src/main/scala/zio/kafka/sharding/Sharding.scala, ${BASE}/src/main/scala/zio/kafka/sharding/PartitionRegisterer.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.Entity, zio.kafka.sharding.Sharding.Reply, zio.kafka.sharding.PartitionRegisterer, zio.kafka.sharding.PartitionRegisterer.ShardEvent, zio.kafka.sharding.Sharding.ShardingDescription, zio.kafka.sharding.Sharding, zio.kafka.sharding.Sharding.Shard[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 4 Scala sources to /home/mykyta.mykhailenko/Desktop/codescreen/zio-kafka-sharding-refactoring/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.8.0:compile for Scala 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 3c6ab317 for Scala compiler version 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/olegpy/better-monadic-for_2.13/0.3.1/better-monadic-for_2.13-0.3.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.10/scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mykyta.mykhailenko/Desktop/codescreen/zio-kafka-sharding-refactoring/target/scala-2.13/classes:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio_2.13/2.0.9/zio_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-concurrent_2.13/2.0.9/zio-concurrent_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-streams_2.13/2.0.9/zio-streams_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-kafka_2.13/2.0.7/zio-kafka_2.13-2.0.7.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-logging_2.13/2.1.9/zio-logging_2.13-2.1.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/avro4s/avro4s-core_2.13/4.1.0/avro4s-core_2.13-4.1.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-internal-macros_2.13/2.0.9/zio-internal-macros_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-stacktracer_2.13/2.0.9/zio-stacktracer_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/izumi-reflect_2.13/2.2.2/izumi-reflect_2.13-2.2.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.3.2/kafka-clients-3.3.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.14.2/jackson-databind-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-collection-compat_2.13/2.9.0/scala-collection-compat_2.13-2.9.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.10/scala-compiler-2.13.10.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.10/scala-reflect-2.13.10.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro/1.9.2/avro-1.9.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/propensive/magnolia_2.13/0.17.0/magnolia_2.13-0.17.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/chuusai/shapeless_2.13/2.3.9/shapeless_2.13-2.3.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.13/4.0.5/json4s-native_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/izumi-reflect-thirdparty-boopickle-shaded_2.13/2.2.2/izumi-reflect-thirdparty-boopickle-shaded_2.13-2.2.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.5.2-1/zstd-jni-1.5.2-1.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.14.2/jackson-annotations-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.14.2/jackson-core-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/io/github/java-diff-utils/java-diff-utils/4.12/java-diff-utils-4.12.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/jline/jline/3.21.0/jline-3.21.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/net/java/dev/jna/jna/5.9.0/jna-5.9.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/propensive/mercator_2.13/0.2.1/mercator_2.13-0.2.1.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.13/4.0.5/json4s-core_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native-core_2.13/4.0.5/json4s-native-core_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.13/4.0.5/json4s-ast_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.13/4.0.5/json4s-scalap_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from zio.kafka.sharding.Sharding.Shard...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.Sharding.Shard[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(zio.kafka.sharding.Sharding.Shard)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of CounterApp: [UsedName(apply,[Default]), UsedName(tell,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(zio.kafka.sharding.Sharding.Shard,ModifiedNames(changes = UsedName(hub$access$4,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(copy$default$5,[Default]), UsedName(apply,[Default]), UsedName(zio;kafka;sharding;Sharding;Shard;init;,[Default]), UsedName(tell,[Default]), UsedName(<init>$default$5,[Default]), UsedName(apply$default$5,[Default]))) invalidates 2 classes due to The zio.kafka.sharding.Sharding.Shard has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(hub$access$4,[Default]), UsedName(unapply,[Default]), UsedName(copy,[Default]), UsedName(copy$default$5,[Default]), UsedName(apply,[Default]), UsedName(zio;kafka;sharding;Sharding;Shard;init;,[Default]), UsedName(tell,[Default]), UsedName(<init>$default$5,[Default]), UsedName(apply$default$5,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(zio.kafka.sharding.Sharding.Shard)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(CounterApp)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from zio.kafka.sharding.PartitionRegisterer...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.PartitionRegisterer[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(zio.kafka.sharding.PartitionRegisterer)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.Sharding. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.model.PartitionRegisterPool: [UsedName(registerPartitionAwait,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(zio.kafka.sharding.PartitionRegisterer,ModifiedNames(changes = UsedName(registerPartitionAwait,[Default]))) invalidates 2 classes due to The zio.kafka.sharding.PartitionRegisterer has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(registerPartitionAwait,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(zio.kafka.sharding.PartitionRegisterer)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(zio.kafka.sharding.model.PartitionRegisterPool)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from zio.kafka.sharding.Sharding...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.Sharding[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(zio.kafka.sharding.Sharding)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.Entity: [UsedName(backpressure,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.PartitionRegisterer: [UsedName(chunkSize,[Default]), UsedName(backpressure,[Default]), UsedName(unmarshalFib,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.model.EntityDescription. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.model.PartitionRegisterPool. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of CounterApp. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(zio.kafka.sharding.Sharding,ModifiedNames(changes = UsedName(chunkSize,[Default]), UsedName(unmarshalFib,[Default]), UsedName(startSharding,[Default]), UsedName(backpressure,[Default]))) invalidates 3 classes due to The zio.kafka.sharding.Sharding has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(chunkSize,[Default]), UsedName(unmarshalFib,[Default]), UsedName(startSharding,[Default]), UsedName(backpressure,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(zio.kafka.sharding.Sharding)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(zio.kafka.sharding.Entity, zio.kafka.sharding.PartitionRegisterer)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from zio.kafka.sharding.model.PartitionRegisterPool...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.model.PartitionRegisterPool[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(zio.kafka.sharding.model.PartitionRegisterPool)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.Sharding: [UsedName(eq,[Default]), UsedName(apply,[Default]), UsedName(canEqual,[Default]), UsedName(registerShardGroups,[Default]), UsedName(==,[Default]), UsedName(asInstanceOf,[Default]), UsedName(PartitionRegisterPool,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(zio.kafka.sharding.model.PartitionRegisterPool,ModifiedNames(changes = UsedName(canEqual,[Default]), UsedName(productElementNames,[Default]), UsedName(pool,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(unapply,[Default]), UsedName(zio;kafka;sharding;model;PartitionRegisterPool;init;,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(registerShardGroups,[Default]), UsedName(notifyAll,[Default]), UsedName(apply,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(copy$default$1,[Default]), UsedName(PartitionRegisterPool,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]))) invalidates 2 classes due to The zio.kafka.sharding.model.PartitionRegisterPool has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(canEqual,[Default]), UsedName(productElementNames,[Default]), UsedName(pool,[Default]), UsedName(##,[Default]), UsedName(equals,[Default]), UsedName(unapply,[Default]), UsedName(zio;kafka;sharding;model;PartitionRegisterPool;init;,[Default]), UsedName(copy,[Default]), UsedName(!=,[Default]), UsedName(productIterator,[Default]), UsedName(finalize,[Default]), UsedName(registerShardGroups,[Default]), UsedName(notifyAll,[Default]), UsedName(apply,[Default]), UsedName($init$,[Default]), UsedName(toString,[Default]), UsedName(clone,[Default]), UsedName(ne,[Default]), UsedName(copy$default$1,[Default]), UsedName(PartitionRegisterPool,[Default]), UsedName(isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName(productArity,[Default]), UsedName(productElement,[Default]), UsedName(hashCode,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementName,[Default]), UsedName(eq,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(productPrefix,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(zio.kafka.sharding.model.PartitionRegisterPool)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(zio.kafka.sharding.Sharding)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from zio.kafka.sharding.Entity...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: zio.kafka.sharding.Entity[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(zio.kafka.sharding.Entity)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.Sharding.Reply. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.PartitionRegisterer: [UsedName(createEntity,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.PartitionRegisterer.ShardEvent. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.model.EntityDescription. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.Sharding: [UsedName(createEntity,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.model.Shard. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.package. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of zio.kafka.sharding.Sharding.Shard: [UsedName(createEntity,[Default]), UsedName(createEntity$default$4,[Default]), UsedName(createEntity$default$3,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of zio.kafka.sharding.model.PartitionRegisterPool. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of CounterApp. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(zio.kafka.sharding.Entity,ModifiedNames(changes = UsedName(createEntity$default$3,[Default]), UsedName(createEntity$default$4,[Default]), UsedName(createEntity,[Default]))) invalidates 4 classes due to The zio.kafka.sharding.Entity has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(createEntity$default$3,[Default]), UsedName(createEntity$default$4,[Default]), UsedName(createEntity,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(zio.kafka.sharding.Entity)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(zio.kafka.sharding.PartitionRegisterer, zio.kafka.sharding.Sharding, zio.kafka.sharding.Sharding.Shard)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	CounterApp[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: CounterApp[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(CounterApp)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated classes: CounterApp[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 3.236950002 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: CounterApp.ReplicateCommand, CounterApp.Replicate, CounterApp[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding CounterApp.Replicate by CounterApp.ReplicateCommand[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 2[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 1 Scala source to /home/mykyta.mykhailenko/Desktop/codescreen/zio-kafka-sharding-refactoring/target/scala-2.13/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.13:1.8.0:compile for Scala 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 3797df4f for Scala compiler version 2.13.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-Xplugin:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/olegpy/better-monadic-for_2.13/0.3.1/better-monadic-for_2.13-0.3.1.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.10/scala-library-2.13.10.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/mykyta.mykhailenko/Desktop/codescreen/zio-kafka-sharding-refactoring/target/scala-2.13/classes:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio_2.13/2.0.9/zio_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-concurrent_2.13/2.0.9/zio-concurrent_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-streams_2.13/2.0.9/zio-streams_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-kafka_2.13/2.0.7/zio-kafka_2.13-2.0.7.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-logging_2.13/2.1.9/zio-logging_2.13-2.1.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/sksamuel/avro4s/avro4s-core_2.13/4.1.0/avro4s-core_2.13-4.1.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-internal-macros_2.13/2.0.9/zio-internal-macros_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/zio-stacktracer_2.13/2.0.9/zio-stacktracer_2.13-2.0.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/izumi-reflect_2.13/2.2.2/izumi-reflect_2.13-2.2.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.3.2/kafka-clients-3.3.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.14.2/jackson-databind-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/modules/scala-collection-compat_2.13/2.9.0/scala-collection-compat_2.13-2.9.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-compiler/2.13.10/scala-compiler-2.13.10.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-reflect/2.13.10/scala-reflect-2.13.10.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/avro/avro/1.9.2/avro-1.9.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/propensive/magnolia_2.13/0.17.0/magnolia_2.13-0.17.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/chuusai/shapeless_2.13/2.3.9/shapeless_2.13-2.3.9.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native_2.13/4.0.5/json4s-native_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/dev/zio/izumi-reflect-thirdparty-boopickle-shaded_2.13/2.2.2/izumi-reflect-thirdparty-boopickle-shaded_2.13-2.2.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/github/luben/zstd-jni/1.5.2-1/zstd-jni-1.5.2-1.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.8.4/snappy-java-1.1.8.4.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.36/slf4j-api-1.7.36.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.14.2/jackson-annotations-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.14.2/jackson-core-2.14.2.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/io/github/java-diff-utils/java-diff-utils/4.12/java-diff-utils-4.12.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/jline/jline/3.21.0/jline-3.21.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/net/java/dev/jna/jna/5.9.0/jna-5.9.0.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/apache/commons/commons-compress/1.19/commons-compress-1.19.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/propensive/mercator_2.13/0.2.1/mercator_2.13-0.2.1.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-core_2.13/4.0.5/json4s-core_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-native-core_2.13/4.0.5/json4s-native-core_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-ast_2.13/4.0.5/json4s-ast_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/org/json4s/json4s-scalap_2.13/4.0.5/json4s-scalap_2.13-4.0.5.jar:/home/mykyta.mykhailenko/.cache/coursier/v1/https/repo1.maven.org/maven2/com/thoughtworks/paranamer/paranamer/2.8/paranamer-2.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.188705936 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
